apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    chart: grafana-0.0.1
    heritage: Tiller
    io.cattle.field/appId: cluster-monitoring
    release: cluster-monitoring
  name: grafana-cluster-monitoring
  namespace: cattle-prometheus
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
      chart: grafana-0.0.1
      release: cluster-monitoring
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        chart: grafana-0.0.1
        release: cluster-monitoring
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_RENDERING_SERVER_URL
          value: "http://localhost:8081/render"
        - name: GF_RENDERING_CALLBACK_URL
          value: "http://localhost:3000/"
        image: rancher/grafana-grafana:7.2.1
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/grafana/public/app/plugins/datasource/prometheus/plugin.json
          name: grafana-static-contents
          subPath: grafana/plugin.json
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /var/lib/grafana/rancher-dashboards
          name: grafana-dashboards
        - mountPath: /var/lib/grafana/rancher-istio-dashboards
          name: grafana-istio-dashboards
        - mountPath: /etc/grafana/provisioning/dashboards/all.yaml
          name: grafana-provisionings
          subPath: dashboards.yaml
        - mountPath: /etc/grafana/provisioning/datasources/all.yaml
          name: grafana-provisionings
          subPath: datasources.yaml
        - mountPath: /etc/grafana/grafana.ini
          name: grafanaconfig
          subPath: grafana.ini
        - mountPath: /etc/grafana/ldap.toml
          name: ldapconfig
          subPath: ldap.toml
      - env:
        - name: ENABLE_METRICS
          value: "true"
        image: grafana/grafana-image-renderer:latest
        imagePullPolicy: IfNotPresent
        name: renderer
        ports:
        - containerPort: 8081
          name: render
          protocol: TCP
      
      - args:
        - nginx
        - -g
        - daemon off;
        - -c
        - /nginx/nginx.conf
        image: rancher/library-nginx:1.19.2-alpine
        imagePullPolicy: IfNotPresent
        name: grafana-proxy
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /nginx/
          name: grafana-nginx
        - mountPath: /var/cache/nginx
          name: nginx-home
      dnsPolicy: ClusterFirst
      initContainers:
      - image: rancher/grafana-grafana:7.1.5
        imagePullPolicy: IfNotPresent
        name: grafana-init-plugin-json-copy
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /host
          name: grafana-static-contents
        - mountPath: /run.sh
          name: grafana-nginx
          subPath: copy-datasource-plugin-json.sh
      - command:
        - /run.sh
        image: rancher/prometheus-auth:v0.2.1
        imagePullPolicy: IfNotPresent
        name: grafana-init-plugin-json-modify
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run.sh
          name: grafana-nginx
          subPath: modify-datasource-plugin-json.sh
        - mountPath: /host
          name: grafana-static-contents
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccount: cluster-monitoring
      serviceAccountName: cluster-monitoring
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: cattle.io/os
        operator: Equal
        value: linux
      volumes:
      - emptyDir: {}
        name: grafana-static-contents
      - emptyDir: {}
        name: grafana-storage
      - configMap:
          defaultMode: 420
          items:
          - key: nginx.conf
            mode: 438
            path: nginx.conf
          - key: copy-datasource-plugin-json.sh
            mode: 511
            path: copy-datasource-plugin-json.sh
          - key: modify-datasource-plugin-json.sh
            mode: 511
            path: modify-datasource-plugin-json.sh
          name: grafana-cluster-monitoring-nginx
        name: grafana-nginx
      - configMap:
          defaultMode: 420
          name: grafana-cluster-monitoring-dashboards
        name: grafana-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-istio-cluster-monitoring-dashboards
        name: grafana-istio-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-cluster-monitoring-provisionings
        name: grafana-provisionings
      - emptyDir: {}
        name: nginx-home
      - configMap:
          defaultMode: 420
          name: grafanaconfig
        name: grafanaconfig
      - configMap:
          defaultMode: 420
          name: ldapconfig
          optional: false
        name: ldapconfig























