Appendix I. Using PersistentVolume and PersistentVolumeClaim for Grafana
In order to centralized management, we will re-create Grafana Deployment. Before re-creating, we delete old Deployment.
kubectl delete deployment grafana-cluster-monitoring -n cattle-prometheus
Create PV and PVC for Granafa volue data
grafana-pv.yaml 
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    cattle.io/creator: norman
  name: grafana-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data
    type: DirectoryOrCreate
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
NOTE: Because Grafana container run as user who has UID is 472 and GID is 472. We have to change owner of path mounted. 
chown 472:472 /data
grafana-pvc.yaml 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: cattle-prometheus
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: grafana-pv
status:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  phase: Bound
grafana-cluster-monitoring.yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    chart: grafana-0.0.1
    heritage: Tiller
    io.cattle.field/appId: cluster-monitoring
    release: cluster-monitoring
  name: grafana-cluster-monitoring
  namespace: cattle-prometheus
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
      chart: grafana-0.0.1
      release: cluster-monitoring
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
        chart: grafana-0.0.1
        release: cluster-monitoring
    spec:
      containers:
      - env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        image: rancher/grafana-grafana:7.1.5
        imagePullPolicy: IfNotPresent
        name: grafana
        volumeMounts:
        - mountPath: /var/lib/grafana
          name:  grafana-pvc
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
      - args:
        - nginx
        - -g
        - daemon off;
        - -c
        - /nginx/nginx.conf
        image: rancher/library-nginx:1.19.2-alpine
        imagePullPolicy: IfNotPresent
        name: grafana-proxy
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /nginx/
          name: grafana-nginx
        - mountPath: /var/cache/nginx
          name: nginx-home
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccount: cluster-monitoring
      serviceAccountName: cluster-monitoring
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: cattle.io/os
        operator: Equal
        value: linux
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: nginx.conf
            mode: 438
            path: nginx.conf
          name: grafana-cluster-monitoring-nginx
        name: grafana-nginx
      - emptyDir: {}
        name: nginx-home
      - name: grafana-pvc
        persistentVolumeClaim:
          claimName: grafana-pvc
